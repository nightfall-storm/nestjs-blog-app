// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  username String @unique
  email    String @unique
  password String

  profile_image String?
  bio           String?

  role Role @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts   Post[]
  comment Comment[]
}

enum Role {
  USER
  ADMIN
}

model Post {
  id Int @id @default(autoincrement())

  title   String
  content String

  authorId Int
  author   User @relation(fields: [authorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categoryId Int // Add this field to reference the category
  category   Category  @relation(fields: [categoryId], references: [id]) // One category per post
  comment    Comment[]
}

model Category {
  id Int @id @default(autoincrement())

  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts Post[]
}

model Comment {
  id Int @id @default(autoincrement())

  content   String
  createdAt DateTime @default(now())

  postId Int
  post   Post @relation(fields: [postId], references: [id])

  userId Int
  user   User @relation(fields: [userId], references: [id])
}
